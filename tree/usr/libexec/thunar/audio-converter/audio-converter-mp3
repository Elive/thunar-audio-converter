#!/bin/bash
SOURCE="$0"
source /usr/lib/elive-tools/functions
REPORTS="1"
#el_make_environment
. gettext.sh
TEXTDOMAIN="thunar-audio-converter"
export TEXTDOMAIN

#lockfile="/tmp/.$(basename $0)-${USER}.lock"

exit_ok(){
    rm -rf "${tempdir}"
    #rm -f "$lockfile"
}
exit_error(){
    rm -rf "${tempdir}"
    #rm -f "$lockfile"
}

#if [[ -r "$lockfile" ]] ; then
    #PROCCESS="$(cat $lockfile)"
#else
    #PROCCESS=" "
#fi
#if (ps up $PROCCESS) 1>/dev/null 2>&1 ; then
    #el_error "$(basename $0) already running"
    #exit
#else
    #echo $$ > "$lockfile"
#fi

# traps needs to be after the lock verification, in order to not remove it when we are already running
trap "exit_ok" EXIT
trap "exit_error" 1 3 5 6 14 15 ERR TERM

# SET the lock file
#echo "$$" > "$lockfile"



main(){
    # pre {{{
    local file PROCESS NUMBER_OF_FILES ARTIST TITLE ALBUM GENRE TRACKNUMBER DATEYEAR file_dest_dir GENRE_NUM GENRE_NUM2 is_delete_original PROGRESS filename guitool tempdir extension
    # How many files to make the progress bar
    PROGRESS=0
    NUMBER_OF_FILES="$#"


    guitool=zenity
    tempdir="/tmp/.${USER}-audio-converter-$$"


    # }}}

    if [[ -z "$@" ]] ; then
        $guitool --error --text="$( eval_gettext "No files provided to convert" )"
        exit 1
    fi

    if el_check_translations_required ; then
        $guitool --warning --text="$( eval_gettext "This application is not fully translated to your language, you can run Eltrans and collaborate to have it correctly translated for everybody!." )"
    fi



    let "INCREMENT=10000000/$NUMBER_OF_FILES"

    mkdir -p "$tempdir"

    if $guitool --question --text="$( eval_gettext "Delete original files after a successful conversion?" )" ; then
        file_dest_dir="$(pwd)"
        is_delete_original=1
    else
        file_dest_dir="$(pwd)/Reconverted_Audio"
    fi

    mkdir -p "$file_dest_dir"
    if ! ((is_delete_original)) ; then
        thunar "${file_dest_dir}" &
        sleep 1
    fi


    (
    for file in "$@"
    do
        echo "$(( ${PROGRESS%%.*} / 100000 ))"
        file="$file"
        filename="${file##*/}"
        filenameraw="${filename%.*}"
        echo -e "# Converting: \t ${filename}"

        # cache it for faster multiprocess (not i/o overload)
        cat "${file}" > /dev/null

        rm -rf "${tempdir}"
        mkdir -p "${tempdir}"

        unset ARTIST TITLE ALBUM  TRACKNUMBER DATEYEAR GENRE

        case "$filename" in
            *wav|*WAV)
                lame --quiet --vbr-new -V 3 -q 0 "${file}" -o "${tempdir}/third.mp3"
                ;;

            *flac|*FLAC)

                ARTIST="$(metaflac "$file" --show-tag=ARTIST | sed s/.*=//g)"
                TITLE="$(metaflac "$file" --show-tag=TITLE | sed s/.*=//g)"
                ALBUM="$(metaflac "$file" --show-tag=ALBUM | sed s/.*=//g)"
                GENRE="$(metaflac "$file" --show-tag=GENRE | sed s/.*=//g)"
                TRACKNUMBER="$(metaflac "$file" --show-tag=TRACKNUMBER | sed s/.*=//g)"
                DATEYEAR="$(metaflac "$file" --show-tag=DATE | sed s/.*=//g)"
                DATEYEAR="${DATEYEAR:0:4}"

                if [[ -n "${GENRE}" ]] ; then
                    GENRE_NUM2="$( id3v2 -L | awk -v genre="$GENRE" '{if ($2 == genre) print $1}' | sed 's|:.*$||g' )"
                    if [[ -n "${GENRE_NUM2}" ]] ; then
                        GENRE_NUM="$GENRE_NUM2"
                    fi

                fi

                if [[ -z "${GENRE_NUM}" ]] ; then
                    GENRE_NUM="$( id3v2 -L | sed 's|: |\n|g' | $guitool --list --title="$( eval_gettext "Select a Genre" )"": $GENRE" --column="id" --column="$( eval_gettext "Genre" )" --height=400 )"
                fi

                flac -s -c -d "$file" | lame --quiet --vbr-new -V 3 -q 0 - -o "${tempdir}/third.mp3"

                id3v2 -t "$TITLE" -T "${TRACKNUMBER:-0}" -a "$ARTIST" -A "$ALBUM" -y "$DATEYEAR" -g "${GENRE_NUM}" "${tempdir}/third.mp3"

                ;;

            *mp3|*MP3)
                extension="mp3"

                lame --quiet --vbr-new -V 3 -q 0 "${file}" -o "${tempdir}/third.mp3"

                ;;
            *m4a|*M4A)
                extension="m4a"

                cp "$file" "${tempdir}/first.${extension}"

                ARTIST="$(ffprobe "$file" 2>&1 | grep -E "artist(\s)*:" | sed -e 's|^.*: ||g' )"
                TITLE="$(ffprobe "$file" 2>&1 | grep -E "title(\s)*:" | sed -e 's|^.*: ||g' )"
                ALBUM="$(ffprobe "$file" 2>&1 | grep -E "album(\s)*:" | sed -e 's|^.*: ||g' )"
                GENRE="$(ffprobe "$file" 2>&1 | grep -E "genre(\s)*:" | sed -e 's|^.*: ||g' )"
                TRACKNUMBER="$(ffprobe "$file" 2>&1 | grep -E "track(\s)*:" | sed -e 's|^.*: ||g' )"
                DATEYEAR="$(ffprobe "$file" 2>&1 | grep -E "date(\s)*:" | sed -e 's|^.*: ||g' )"
                DATEYEAR="${DATEYEAR:0:4}"

                if [[ -n "${GENRE}" ]] ; then
                    GENRE_NUM2="$( id3v2 -L | awk -v genre="$GENRE" '{if ($2 == genre) print $1}' | sed 's|:.*$||g' )"
                    if [[ -n "${GENRE_NUM2}" ]] ; then
                        GENRE_NUM="$GENRE_NUM2"
                    fi

                fi

                if [[ -z "${GENRE_NUM}" ]] ; then
                    GENRE_NUM="$( id3v2 -L | sed 's|: |\n|g' | $guitool --list --title="$( eval_gettext "Select a Genre" )"": $GENRE" --column="id" --column="$( eval_gettext "Genre" )" --height=400 )"
                fi

                mplayer -really-quiet -af volnorm=0 -vo null -noconsolecontrols -af resample=44100 -ao pcm:waveheader:file="${tempdir}/second.wav" "${tempdir}/first.${extension}" 2>/dev/null
                lame --quiet --vbr-new -V 4 -q 0 "${tempdir}/second.wav" -o "${tempdir}/third.mp3"


                id3v2 -t "$TITLE" -T "${TRACKNUMBER:-0}" -a "$ARTIST" -A "$ALBUM" -y "$DATEYEAR" -g "${GENRE_NUM}" "${tempdir}/third.mp3"

                ;;

            *)
                extension="${file##*.}"

                cp "$file" "${tempdir}/first.${extension}"

                mplayer -really-quiet -af volnorm=0 -vo null -noconsolecontrols -af resample=44100 -ao pcm:waveheader:file="${tempdir}/second.wav" "${tempdir}/first.${extension}" 2>/dev/null

                lame --quiet --vbr-new -V 4 -q 0 "${tempdir}/second.wav" -o "${tempdir}/third.mp3"

                ;;
        esac


        mv "${tempdir}/third.mp3" "${file_dest_dir}/${filenameraw}.mp3"

        if ((is_delete_original)) ; then
            rm -f "${file}"
        fi

        rm -rf "${tempdir}"

        let "PROGRESS+=$INCREMENT"


    done
    ) | $guitool  --progress --title "$( eval_gettext "Converting files" )" --percentage=0 --auto-close --auto-kill


    rm -rf "${tempdir}"


}

#
#  MAIN
#
main "$@"

# vim: set foldmethod=marker :

